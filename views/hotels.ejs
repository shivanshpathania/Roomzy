<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Available Hotels</title>
    <style>
      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f6f8;
        color: #333;
      }
      header {
        background-color: #0f3460;
        color: white;
        padding: 20px;
        text-align: center;
      }
      header a {
        color: #fdb827;
        text-decoration: none;
        margin: 0 10px;
        font-weight: bold;
      }
      .hotel-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 20px;
        padding: 30px;
      }
      .hotel-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease;
      }
      .hotel-card:hover {
        transform: translateY(-5px);
      }
      .hotel-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
      }
      .hotel-card h2 {
        margin: 15px;
        color: #0f3460;
      }
      .hotel-card p {
        margin: 10px 15px;
        font-size: 15px;
        line-height: 1.4;
      }
      .weather {
        margin: 10px 15px;
        font-size: 14px;
        color: #555;
      }
      form {
        margin: 10px 15px;
      }
      button {
        background-color: #0f3460;
        color: white;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
        border-radius: 5px;
      }
      .login-btn {
        display: inline-block;
        padding: 10px 10px;
        background-color: #3498db;
        color: white;
        text-decoration: none;
        border-radius: 8px;
        font-weight: bold;
        transition: background-color 0.3s ease;
      }
      .search-container {
        text-align: center;
        margin: 20px;
      }
      .search-container input {
        padding: 10px;
        width: 50%;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
      }
      .search-container button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .search-container button:hover {
        background-color: #0056b3;
      }
    </style>
  </head>

  <body>
    <header style="background-color: #0f3460; color: white; padding: 10px 20px;">
      <div style="max-width: 1200px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between; flex-wrap: wrap;">
          <!-- Logo -->
          <div style="flex: 1;">
              <a href="/" style="color: #fdb827; text-decoration: none; font-size: 1.5em; font-weight: bold;">
                  Roomzy
              </a>
          </div>
  
          <!-- Navigation Links -->
          <nav style="flex: 2; text-align: center;">
              <a href="/" style="color: white; text-decoration: none; margin: 0 15px;">Home</a>
              <a href="/user/bookings" style="color: white; text-decoration: none; margin: 0 15px;">Your Bookings</a>
              <a href="/login" style="color: white; text-decoration: none; margin: 0 15px;">Login</a>
              <a href="/signup" style="color: white; text-decoration: none; margin: 0 15px;">Signup</a>
          </nav>
  
          <!-- Currency Selector -->
          <div style="flex: 1; text-align: right;">
              <label for="currency" style="color: white; margin-right: 10px;">Currency:</label>
              <select id="currency" style="padding: 5px; border-radius: 5px; border: none;">
                  <option value="INR" selected>INR (‚Çπ)</option>
                  <option value="USD">USD ($)</option>
                  <option value="EUR">EUR (‚Ç¨)</option>
                  <option value="GBP">GBP (¬£)</option>
              </select>
          </div>
      </div>
  </header>

    <% if (user) { %>
    <h2 style="text-align: center; text-transform: capitalize">
      <span style="color: #0c218b">Welcome :</span> <%= user.username %>
    </h2>
    <% } else { %>
    <h2 style="text-align: center; text-transform: capitalize">
      <span style="color: #0c218b">Welcome, Guest!</span>
    </h2>
    <% } %>

    <div class="search-container">
      <input
        type="text"
        id="hotelSearch"
        placeholder="Search hotels by name or city..."
      />
      <button id="searchButton">Search</button>
    </div>

    <div class="hotel-list">
      <% hotels.forEach(hotel => { %>
      <div
        class="hotel-card"
        data-name="<%= hotel.name.toLowerCase() %>"
        data-city="<%= hotel.location.toLowerCase() %>"
      >
        <img src="<%= hotel.image %>" alt="<%= hotel.name %>" />
        <h2><%= hotel.name %></h2>
        <p><strong>Location:</strong> <%= hotel.location %></p>
        <p class="weather" id="weather-<%= hotel._id %>">Loading weather...</p>

        <div style="margin: 15px 0; text-align: center">
          <a
            href="/hotel/<%= hotel._id %>"
            style="
              background: linear-gradient(135deg, #0f3460, #1a4d8f);
              color: white;
              text-decoration: none;
              padding: 10px 20px;
              border-radius: 25px;
              font-size: 0.9em;
              display: inline-block;
              transition: all 0.3s ease;
              margin: 5px;
            "
            onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 20px rgba(15, 52, 96, 0.3)'"
            onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'"
          >
            üè® View Details
          </a>

          <a
            href="/hotel/<%= hotel._id %>/map"
            style="
              background: linear-gradient(135deg, #28a745, #20c997);
              color: white;
              text-decoration: none;
              padding: 10px 20px;
              border-radius: 25px;
              font-size: 0.9em;
              display: inline-block;
              transition: all 0.3s ease;
              margin: 5px;
            "
            onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 20px rgba(40, 167, 69, 0.3)'"
            onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'"
          >
            üó∫Ô∏è View Map
          </a>
        </div>
      </div>
      <% }) %>
    </div>

    <%- include('partials/footer') %>

    <script>
      // ‚úÖ Fetch weather for each hotel from backend
      document.querySelectorAll(".hotel-card").forEach((card) => {
        const city = card.getAttribute("data-city");
        const weatherElement = card.querySelector(".weather");

        fetch(`/api/weather/${city}`)
          .then((response) => response.json())
          .then((data) => {
            if (data.main) {
              const temp = data.main.temp;
              const description = data.weather[0].description;
              weatherElement.textContent = `Weather: ${temp}¬∞C, ${description}`;
            } else {
              weatherElement.textContent = "Weather data not available";
            }
          })
          .catch(() => {
            weatherElement.textContent = "Error fetching weather data";
          });
      });

      // ‚úÖ Hotel search filter
      document
        .getElementById("searchButton")
        .addEventListener("click", function () {
          const query = document
            .getElementById("hotelSearch")
            .value.toLowerCase();
          const hotelCards = document.querySelectorAll(".hotel-card");

          hotelCards.forEach((card) => {
            const hotelName = card.getAttribute("data-name").toLowerCase();
            const hotelCity = card.getAttribute("data-city").toLowerCase();
            if (hotelName.includes(query) || hotelCity.includes(query)) {
              card.style.display = "block";
            } else {
              card.style.display = "none";
            }
          });
        });

      // ‚úÖ Currency conversion with live API rates
      const currencySymbols = {
        INR: "‚Çπ",
        USD: "$",
        EUR: "‚Ç¨",
        GBP: "¬£",
      };

      // Live exchange rates (fetched from API)
      let rates = {
        INR: { symbol: "‚Çπ", rate: 1 },
        USD: { symbol: "$", rate: 0.012 },
        EUR: { symbol: "‚Ç¨", rate: 0.011 },
        GBP: { symbol: "¬£", rate: 0.0096 },
      };

      const selector = document.getElementById("currency");

      // Fetch live exchange rates
      async function fetchExchangeRates() {
        try {
          const response = await fetch("/api/currency/rates?base=INR");
          const data = await response.json();

          if (data.rates) {
            rates = {
              INR: { symbol: currencySymbols.INR, rate: 1 },
              USD: {
                symbol: currencySymbols.USD,
                rate: data.rates.USD || 0.012,
              },
              EUR: {
                symbol: currencySymbols.EUR,
                rate: data.rates.EUR || 0.011,
              },
              GBP: {
                symbol: currencySymbols.GBP,
                rate: data.rates.GBP || 0.0096,
              },
            };
            console.log("Live exchange rates loaded:", rates);
          }
        } catch (error) {
          console.warn(
            "Failed to fetch live rates, using fallback rates:",
            error
          );
        }
      }

      // Load exchange rates on page load
      fetchExchangeRates();

      if (selector) {
        selector.addEventListener("change", () => {
          const selected = selector.value;
          const prices = document.querySelectorAll(".price");

          prices.forEach((priceEl) => {
            const base = parseFloat(priceEl.dataset.base); // base INR price
            const converted = (base * rates[selected].rate).toFixed(2);
            priceEl.textContent = `${rates[selected].symbol}${converted}`;
          });
        });
      }
    </script>
  </body>
</html>
